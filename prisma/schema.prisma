// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  firstname String
  lastname  String
  password  String
  role      Role?
  doctor    Doctor?
  patient   Patient?
}

model Doctor {
  id               Int              @id @default(autoincrement())
  name             String
  email            String           @unique
  password         String?
  specialization   String
  appointments     Appointment[]
  prescriptions    Prescription[]
  userId           Int              @unique
  user             User             @relation(fields: [userId], references: [id])
  medicalHistories MedicalHistory[]
}

model Patient {
  id               Int              @id @default(autoincrement())
  name             String
  email            String           @unique
  password         String
  dateOfBirth      DateTime
  address          String
  userId           Int              @unique
  user             User             @relation(fields: [userId], references: [id])
  appointments     Appointment[]
  prescriptions    Prescription[]
  medicalHistories MedicalHistory[]
}

model Appointment {
  id        Int      @id @default(autoincrement())
  patientId Int
  doctorId  Int?
  date      DateTime
  time      DateTime
  reason    String
  active    String?
  patient   Patient?  @relation(fields: [patientId], references: [id])
  doctor    Doctor?   @relation(fields: [doctorId], references: [id])
}

model Prescription {
  id         Int      @id @default(autoincrement())
  patientId  Int
  doctorId   Int
  medication String
  dosage     String
  frequency  String
  startDate  DateTime
  endDate    DateTime
  patient    Patient  @relation(fields: [patientId], references: [id])
  doctor     Doctor   @relation(fields: [doctorId], references: [id])
}

model MedicalHistory {
  id        Int     @id @default(autoincrement())
  patientId Int
  doctorId  Int
  diagnosis String
  treatment String
  notes     String
  patient   Patient @relation(fields: [patientId], references: [id])
  doctor    Doctor  @relation(fields: [doctorId], references: [id])
}

enum Role {
  DOCTOR
  ADMIN
  PATIENT
}
